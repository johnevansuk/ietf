<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="IM for Packet Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="September" day="19"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 78?>

<t>The primary function of a network is to transport and deliver packets according to service level objectives.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss provides the most direct signal for network operations to identify the customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<?line 82?>

<section anchor="introduction"><name>Introduction</name>
<t>To effectively automate network operations, a network operator must be able to detect anomalous packet loss, determine its root cause, and then apply appropriate actions to mitigate any customer-impacting issues.  Some packet loss is normal or intended in IP/MPLS networks, however.  Therefore, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions is taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>Existing metrics for reporting packet loss, such as ifInDiscards, ifOutDiscards, ifInErrors, and ifOutErrors defined in <xref target="RFC1213"/>, are insufficient for several reasons. First, they lack precision; for instance, ifInDiscards aggregates all discarded inbound packets without specifying the cause, making it challenging to distinguish between intended and unintended discards. Second, these definitions are ambiguous, leading to inconsistent vendor implementations. For example, in some implementations ifInErrors accounts only for errored packets that are dropped, while in others, it includes all errored packets, whether they are dropped or not. Many implementations support more discard metrics than these, however, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting. For example, <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity (e.g., the "For us" reason code) to support automated root cause analysis and impact mitigation.</t>

<t>Hence, this document presents an information model for packet loss reporting, introducing a classification scheme to facilitate automated mitigation of unintended packet loss. The model addresses the aforementioned issues while remaining protocol-agnostic and implementation-independent, in accordance with <xref target="RFC3444"/>.</t>

<t>The specific implementations of this information model (i.e., protocols and associated data models) are outside the scope of this document.  The scope of this document is limited to reporting packet loss at Layer 3 and frames discarded at Layer 2, although the information model might be extended in future to cover segments dropped at Layer 4. This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

<t><xref target="problem"/> describes the problem to be solved. <xref target="model"/> describes the information model and requirements with a set of examples.  <xref target="mapping"/> provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  <xref target="module"/> presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>A packet discard is any packet dropped by a device, whether intentionally or unintentionally.</t>

<t>Intended packet loss refers to packet discards that occur due to deliberate network policies or configurations - such as Access Control Lists (ACLs) or policing mechanisms - designed to enforce security or quality of service.</t>

<t>Unintended packet loss refers to packet discards resulting from network errors, misconfigurations, hardware failures, or other anomalies not aligned with the network operator's intended behaviour. These losses negatively impact network performance and service delivery.</t>

<t>For example, intended packet loss occurs when packets are dropped because they match a security policy denying certain traffic types. Unintended packet loss might happen due to a faulty interface causing corrupted packets, leading to their discard.</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an Access Control List (ACL) and being dropped.  While the specific definition of unintended packet loss is network-dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by automatically mitigating unintended packet loss:</t>

<t><list style="numbers" type="1">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a network operator as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<dl>
  <dt>FEATURE-LOSS-CAUSE:</dt>
  <dd>
    <t>The cause of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-RATE:</dt>
  <dd>
    <t>The rate and/or degree of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-DURATION:</dt>
  <dd>
    <t>The duration of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-LOCATION:</dt>
  <dd>
    <t>The location of the loss.</t>
  </dd>
</dl>

<t>FEATURE-LOSS-RATE, FEATURE-LOSS-DURATION, and FEATURE-LOSS-LOCATION are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/>. FEATURE-LOSS-CAUSE, however, is dependent on the classification scheme used for packet loss reporting. The next section defines a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<section anchor="rationale"><name>Design Rationale</name>

<t>This document uses YANG <xref target="RFC6020"/> to represent the information model for three main reasons. First, YANG, along with its data structure extensions <xref target="RFC8791"/>, allows designers to define the model in an abstract way, decoupled from specific implementations. This abstraction ensures consistency and provides flexibility for diverse potential implementations, with the structure and groupings easily adaptable to data models such as those specific to SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/>, RESTCONF <xref target="RFC8040"/>, or IPFIX <xref target="RFC7011"/>.  Second, this approach ensures a lossless translation from the information model to a YANG data model, preserving both semantics and structure. Lastly, YANG capitalises on the community's broad familiarity with its syntax and use, facilitating easier adoption and evolution.</t>

</section>
<section anchor="structure"><name>Structure</name>
<t>The classification scheme is structured as a hierarchical tree that follows the structure: component/direction/type/layer/sub-type/sub-sub-type/.../metric.  The elements of the tree are defined as follows:</t>

<t><list style="symbols">
  <t>Component: Specifies where in the device the discards are accounted. It can be:
  <list style="symbols">
      <t>interface: discards of traffic to or from a specific network interface.</t>
      <t>device: discards of traffic transiting the device.</t>
      <t>control-plane: discards of traffic to or from the device's control plane.</t>
      <t>flow: discards of traffic associated with a specific traffic flow.</t>
    </list></t>
  <t>Direction:
  <list style="symbols">
      <t>ingress: counters for incoming packets or frames.</t>
      <t>egress: counters for outgoing packets or frames.</t>
    </list></t>
  <t>Type:
  <list style="symbols">
      <t>traffic: counters for successfully received or transmitted packets or frames.</t>
      <t>discards: counters for packets or frames that were dropped.</t>
    </list></t>
  <t>Layer:
  <list style="symbols">
      <t>l2: Layer 2 discards, such as frames with CRC errors.</t>
      <t>l3: Layer 3 discards, such as IP packets with invalid headers.</t>
    </list></t>
  <t>Sub-Type:
  <list style="symbols">
      <t>For discards:
      <list style="symbols">
          <t>errors: discards due to errors in processing packets or frames (e.g., checksum errors).</t>
          <t>policy: discards due to policy enforcement (e.g., ACL drops).</t>
          <t>no-buffer: discards due to lack of buffer space (e.g., congestion-related drops).</t>
        </list></t>
    </list></t>
</list></t>

<t>Each sub-type may further contain specific reasons for discards, providing more detailed insight into the cause of packet loss.</t>

<figure><artwork><![CDATA[
module: ietf-packet-discard-reporting

  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint32
       |     |  |     +-- crc-error?       uint32
       |     |  |     +-- invalid-mac?     uint32
       |     |  |     +-- invalid-vlan?    uint32
       |     |  |     +-- invalid-frame?   uint32
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint32
       |     |  |  |  +-- checksum-error?   uint32
       |     |  |  |  +-- mtu-exceeded?     uint32
       |     |  |  |  +-- invalid-packet?   uint32
       |     |  |  +-- ttl-expired?     uint32
       |     |  |  +-- no-route?        uint32
       |     |  |  +-- invalid-sid?     uint32
       |     |  |  +-- invalid-label?   uint32
       |     |  +-- internal
       |     |     +-- packets?        uint32
       |     |     +-- parity-error?   uint32
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint32
       |     |  |  +-- acl?      uint32
       |     |  +-- l3
       |     |     +-- packets?      uint32
       |     |     +-- acl?          uint32
       |     |     +-- policer
       |     |     |  +-- packets?   uint32
       |     |     |  +-- bytes?     uint32
       |     |     +-- null-route?   uint32
       |     |     +-- rpf?          uint32
       |     |     +-- ddos?         uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint32
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint32
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint32
       |     |     +-- policer
       |     |        +-- packets?   uint32
       |     |        +-- bytes?     uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
          |  +-- traffic
          |  |  +-- packets?   uint32
          |  |  +-- bytes?     uint32
          |  +-- discards
          |     +-- packets?   uint32
          |     +-- bytes?     uint32
          |     +-- policy
          |        +-- packets?   uint32
          +-- egress
             +-- traffic
             |  +-- packets?   uint32
             |  +-- bytes?     uint32
             +-- discards
                +-- packets?   uint32
                +-- bytes?     uint32

]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

</section>
<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device, while requirement 11 relates to packets destined for or originating from the device:</t>

<t><list style="numbers" type="1">
  <t>All instances of Layer 2 frame or Layer 3 packet receipt, transmission, and discards <bcp14>MUST</bcp14> be accounted for.</t>
  <t>All instances of Layer 2 frame or Layer 3 packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.  Where they cannot be attributed to the interface, they <bcp14>MUST</bcp14> be attributed to the device.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the Layer 2 traffic class or the Layer 2 discard classes within a single direction or context, i.e., ingress or egress or device.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the Layer 3 traffic class or the Layer 3 discard classes within a single direction or context, i.e., ingress or egress or device.</t>
  <t>A frame accounted for at Layer 2 <bcp14>SHOULD NOT</bcp14> be accounted for at Layer 3 and vice versa.  An implementation <bcp14>MUST</bcp14> indicate which layers a discard is counted against.</t>
  <t>The aggregate Layer 2 and Layer 3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying frames or packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the Layer 2 and Layer 3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no-buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no-buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/traffic/l3/v4/unicast/packets</t>
  <t>interface/ingress/traffic/l3/v4/unicast/bytes</t>
  <t>interface/ingress/traffic/qos/class_0/packets</t>
  <t>interface/ingress/traffic/qos/class_0/bytes</t>
</list></t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/discards/l3/v6/unicast/packets</t>
  <t>interface/ingress/discards/l3/v6/unicast/bytes</t>
  <t>interface/ingress/discards/l3/rx/ttl-expired/packets</t>
</list></t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:</t>

<t><list style="symbols">
  <t>interface/egress/discards/l3/v4/unicast/packets</t>
  <t>interface/egress/discards/l3/v4/unicast/bytes</t>
  <t>interface/egress/discards/no-buffer/class_0/packets</t>
  <t>interface/egress/discards/no-buffer/class_0/bytes</t>
</list></t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<texttable title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table">
      <ttcol align='left'>Discard class</ttcol>
      <ttcol align='left'>Cause</ttcol>
      <ttcol align='center'>Discard rate</ttcol>
      <ttcol align='center'>Discard duration</ttcol>
      <ttcol align='center'>Unintended?</ttcol>
      <ttcol align='left'>Possible actions</ttcol>
      <c>ingress/discards/errors/l2/rx</c>
      <c>Upstream device or link error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take upstream link or device out-of-service</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Tracert</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Routing loop</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>.*/policy/.*</c>
      <c>Policy</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Config error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Invalid destination</c>
      <c>&gt;Baseline</c>
      <c>O(10min)</c>
      <c>N</c>
      <c>Escalate to operator</c>
      <c>ingress/discards/errors/local</c>
      <c>Device errors</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take device out-of-service</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Bring capacity back into service or move traffic</c>
</texttable>

<t>The 'Baseline' in the 'Discard Rate' column is both discard class and network dependent.</t>

</section>
<section anchor="module"><name>YANG Module</name>

<t>The "ietf-packet-discard-reporting" uses the "sx" structure defined in <xref target="RFC8791"/>.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-packet-discard-reporting@2024-06-04.yang"
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Grouping for 64-bit Layer 3 packet counters.";
    leaf packets {
      type uint64;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Grouping for 64-bit Layer 3 packet and byte counters.";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-64 {
    description
      "Grouping for 64-bit Layer 2 frame counters.";
    leaf frames {
      type uint64;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Grouping for 64-bit Layer 2 frame and byte counters.";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping basic-packets-32 {
    description
      "Grouping for 32-bit Layer 3 packet counters.";
    leaf packets {
      type uint32;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-32 {
    description
      "Grouping for 32-bit Layer 3 packet and byte counters.";
    uses basic-packets-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-32 {
    description
      "Grouping for 32-bit Layer 2 frame counters.";
    leaf frames {
      type uint32;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-32 {
    description
      "Grouping for 32-bit Layer 2 frame and byte counters.";
    uses basic-frames-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters.";
    uses basic-frames-bytes-64;
  }

  identity address-family {
    description
      "Defines a type for the address family.";
  }

  identity ipv4 {
    base address-family;
    description
      "Identity for an IPv4 address family.";
  }

  identity ipv6 {
    base address-family;
    description
      "Identity for an IPv6 address family.";
  }

  identity all {
    base address-family;
    description
      "Identity for all address families.";
  }

  grouping ip {
    description
      "Layer 3 traffic counters per address family.";
    list address-family-stat {
      key "address-family";
      description
        "Reports per address family traffic counters.";
      leaf address-family {
        type identityref {
          base address-family;
        }
        description
          "Specifies an address family.";
      }
      uses basic-packets-bytes-64;
      container unicast {
        description
          "Unicast traffic counters.";
        uses basic-packets-bytes-64;
      }
      container multicast {
        description
          "Multicast traffic counters.";
        uses basic-packets-bytes-64;
      }
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters.";
      uses ip;
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic
       counters.";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters.";
      leaf id {
        type string;
        description
          "QoS class identifier.";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "All traffic counters.";
    container l2 {
      description
        "Layer 2 traffic counters.";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters.";
      uses l3-traffic;
    }
    container qos {
      description
        "QoS traffic counters.";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters.";
    container ingress {
      description
        "Control plane ingress counters.";
      container traffic {
        description
          "Control plane ingress packets received.";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane ingress packet discard counters.";
        uses basic-packets-bytes-32;
        container policy {
          description
            "Number of control plane packets discarded
             due to policy.";
          uses basic-packets-32;
        }
      }
    }
    container egress {
      description
        "Control plane egress counters.";
      container traffic {
        description
          "Control plane packets transmitted.";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane egress packet discard counters.";
        uses basic-packets-bytes-32;
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame error discard counters.";
    container rx {
      description
        "Layer 2 ingress frame receive error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of frames discarded due to errors with the received frame.";
      }
      leaf crc-error {
        type uint32;
        description
          "The number of frames discarded due to CRC error.";
      }
      leaf invalid-mac {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           MAC address.";
      }
      leaf invalid-vlan {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           VLAN tag.";
      }
      leaf invalid-frame {
        type uint32;
        description
          "The number of invalid frames discarded due to other reasons, not limited to: malformed frames, frame-size violations.";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error discard counters.";
    container rx {
      description
        "Layer 3 ingress packet receive error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors in the received packet.";
      }
      leaf checksum-error {
        type uint32;
        description
          "The number of received packets discarded due to a checksum
           error.";
      }
      leaf mtu-exceeded {
        type uint32;
        description
          "The number of received packets discarded due to MTU
           exceeded.";
      }
      leaf invalid-packet {
        type uint32;
        description
          "The number of invalid packets discarded due to other reasons, not limited to: invalid packet length, invalid header fields, invalid options, invalid protocol version, invalid flags or control bits, malformed packets.";
      }
    }
    leaf ttl-expired {
      type uint32;
      description
        "The number of received packets discarded due to expired
         TTL.";
    }
    leaf no-route {
      type uint32;
      description
        "The number of packets discarded due to not matching a valid route.";
    }
    leaf invalid-sid {
      type uint32;
      description
        "The number of packets discarded due to an invalid Segment Routing (SR) SID.";
    }
    leaf invalid-label {
      type uint32;
      description
        "The number of packets discarded due to an invalid MPLS label.";
    }
  }

  grouping errors-l3-int {
    description
      "Internal error discard counters.";
    leaf packets {
      type uint32;
      description
        "The number of packets discarded due to internal errors.";
    }
    leaf parity-error {
      type uint32;
      description
        "The number of packets discarded due to parity errors.";
    }
  }

  grouping errors-rx {
    description
      "Ingress error discard counters.";
    container l2 {
      description
        "Layer 2 received frame error discard counters.";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error discard counters.";
      uses errors-l3-rx;
    }
    container internal {
      description
        "Internal error discard counters.";
      uses errors-l3-int;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error discard counters.";
    container tx {
      description
        "Layer 2 transmit frame error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of Layer 2 frames discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error discard counters.";
    container tx {
      description
        "Layer 3 transmit packet error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error discard counters.";
    container l2 {
      description
        "Layer 2 transmit frame error discard counters.";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error discard counters.";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard
       counters.";
    leaf frames {
      type uint32;
      description
        "The number of Layer 2 frames discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of frames discarded due to
         Layer 2 ACLs.";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard
       counters.";
    leaf packets {
      type uint32;
      description
        "The number of Layer 3 packets discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to
         Layer 3 ACLs.";
    }
    container policer {
      description
        "The number of packets discarded due ingress policer violations.";
      uses basic-packets-bytes-32;
    }
    leaf null-route {
      type uint32;
      description
        "The number of packets discarded due to matching a
         null route.";
    }
    leaf rpf {
      type uint32;
      description
        "The number of packets discarded due to failing Reverse
         Path Forwarding (RPF) check.";
    }
    leaf ddos {
      type uint32;
      description
        "The number of packets discarded due to DDoS
         protection policies.";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet
       discard counters.";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters.";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters.";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters.";
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to Layer 3
         egress ACLs.";
    }
    container policer {
      description
        "The number of packets discarded due egress policer violations.";
      uses basic-packets-bytes-32;
    }
  }

  grouping policy-tx {
    description
      "Policy egress packet discard counters.";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters.";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level traffic and discard counters.";
    container ingress {
      description
        "Ingress counters.";
      container traffic {
        description
          "Ingress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Ingress discard counters.";
        container l2 {
          description
            "Ingress Layer 2 frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Ingress Layer 3 packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress error discard counters.";
          uses errors-rx;
        }
        container policy {
          description
            "Ingress policy-related discard counters.";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters.";
      container traffic {
        description
          "Egress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Egress packet and frame discard counters.";
        container l2 {
          description
            "Layer 2 egress frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error discard counters.";
          uses errors-tx;
        }
        container policy {
          description
            "Egress policy-related packet discard counters.";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters.";
      uses control-plane;
    }
  }

  /*
   * Main structure definition
   */

  sx:structure packet-discard-reporting {
    description
      "Specifies the abstract structure of packet discard reporting data.";
    list interface {
      key "name";
      description
        "Indicates a list of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Indicates the name of the interface.";
      }
      uses interface;
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG module using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this document has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC8791">
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. BjÃ¶rklund" initials="M." surname="BjÃ¶rklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8791"/>
  <seriesInfo name="DOI" value="10.17487/RFC8791"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC6020">
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <date month="October" year="2010"/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6020"/>
  <seriesInfo name="DOI" value="10.17487/RFC6020"/>
</reference>

<reference anchor="RFC3688">
  <front>
    <title>The IETF XML Registry</title>
    <author fullname="M. Mealling" initials="M." surname="Mealling"/>
    <date month="January" year="2004"/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="81"/>
  <seriesInfo name="RFC" value="3688"/>
  <seriesInfo name="DOI" value="10.17487/RFC3688"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor="RFC2475">
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname="S. Blake" initials="S." surname="Blake"/>
    <author fullname="D. Black" initials="D." surname="Black"/>
    <author fullname="M. Carlson" initials="M." surname="Carlson"/>
    <author fullname="E. Davies" initials="E." surname="Davies"/>
    <author fullname="Z. Wang" initials="Z." surname="Wang"/>
    <author fullname="W. Weiss" initials="W." surname="Weiss"/>
    <date month="December" year="1998"/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2475"/>
  <seriesInfo name="DOI" value="10.17487/RFC2475"/>
</reference>

<reference anchor="RFC8289">
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname="K. Nichols" initials="K." surname="Nichols"/>
    <author fullname="V. Jacobson" initials="V." surname="Jacobson"/>
    <author fullname="A. McGregor" initials="A." role="editor" surname="McGregor"/>
    <author fullname="J. Iyengar" initials="J." role="editor" surname="Iyengar"/>
    <date month="January" year="2018"/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8289"/>
  <seriesInfo name="DOI" value="10.17487/RFC8289"/>
</reference>

<reference anchor="RFC1213">
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname="K. McCloghrie" initials="K." surname="McCloghrie"/>
    <author fullname="M. Rose" initials="M." surname="Rose"/>
    <date month="March" year="1991"/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="17"/>
  <seriesInfo name="RFC" value="1213"/>
  <seriesInfo name="DOI" value="10.17487/RFC1213"/>
</reference>

<reference anchor="RFC7270">
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname="A. Yourtchenko" initials="A." surname="Yourtchenko"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <author fullname="B. Claise" initials="B." surname="Claise"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7270"/>
  <seriesInfo name="DOI" value="10.17487/RFC7270"/>
</reference>

<reference anchor="RFC3444">
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname="A. Pras" initials="A." surname="Pras"/>
    <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
    <date month="January" year="2003"/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3444"/>
  <seriesInfo name="DOI" value="10.17487/RFC3444"/>
</reference>

<reference anchor="RFC8340">
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="215"/>
  <seriesInfo name="RFC" value="8340"/>
  <seriesInfo name="DOI" value="10.17487/RFC8340"/>
</reference>

<reference anchor="RFC1157">
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname="J.D. Case" initials="J.D." surname="Case"/>
    <author fullname="M. Fedor" initials="M." surname="Fedor"/>
    <author fullname="M.L. Schoffstall" initials="M.L." surname="Schoffstall"/>
    <author fullname="J. Davin" initials="J." surname="Davin"/>
    <date month="May" year="1990"/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="1157"/>
  <seriesInfo name="DOI" value="10.17487/RFC1157"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC7011">
  <front>
    <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
    <author fullname="B. Claise" initials="B." role="editor" surname="Claise"/>
    <author fullname="B. Trammell" initials="B." role="editor" surname="Trammell"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <date month="September" year="2013"/>
    <abstract>
      <t>This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network. In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required. This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process. This document obsoletes RFC 5101.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="77"/>
  <seriesInfo name="RFC" value="7011"/>
  <seriesInfo name="DOI" value="10.17487/RFC7011"/>
</reference>


<reference anchor="I-D.ietf-netmod-rfc8407bis">
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author fullname="Andy Bierman" initials="A." surname="Bierman">
         <organization>YumaWorks</organization>
      </author>
      <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
         <organization>Orange</organization>
      </author>
      <author fullname="Qin Wu" initials="Q." surname="Wu">
         <organization>Huawei</organization>
      </author>
      <date day="11" month="October" year="2024"/>
      <abstract>
	 <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-18"/>
   
</reference>




    </references>

</references>


<?line 1133?>

<section anchor="wheredropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single-ASIC, shared-buffered type device. Packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     +-> Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null-route

Unintended                 error/rx/l2   error/l3/rx   no-buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no-route
                                         error/l3/rx/ttl-expired

]]></artwork></figure>

<section anchor="discard-class-descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received Layer 2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl-expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no-route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no-buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="implementation-experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers" type="1">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps limit the quantity of data produced per interface, thus constraining the data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are many possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null-route/packets and interface/ingress/discards/errors/no-route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, additional context is needed to determine if ACL discards are intended or due to a misconfigured ACL, i.e., with configuration validation before deployment or by detecting a significant change in ACL discards after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 32-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunnelled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIACF5EmcAA+196XIbR9LgfzxFLf3DkgcAT+uAPJIhkrLpj6Q4JPVpJma9
E41GAehRoxvugyRMcZ9ln2WfbPOoq0+AIuWJ2DBjPAIaXVWZWXlVVlZWr9fr
ZEEWyoEYRuIomsTJ3MuCOBIn8ViGAr6LM8//JDNxEKS+l4zFuVzESRZE0443
GiXyaiCOTtrfG8d+5M1hiHHiTbJeILNJL16k3vW0N+aX5zhYb2uvM/YyeG9n
a2evt/Wyt/2y48ODaZwsByLNxp1OsEgGIkvyNNvZ2nq5tdPxEukNxPuFTAjs
VHjRWJx4kTeVcxllYgi/d67j5NM0ifMFvHl2Mfz4k+h8kkt4Ogbgo0wmkcx6
Bwhcp5Nm0MO/vDCOAJClTDuLYCD+mcV+V6SATyInKXxazvHDr52Ol2ezOBl0
RK8j4C+I0oH4pS8Or7wopSeM+S/xLHIexskUCD73fo8j+p5CvzIbiG1xlgSR
Hyy8UJyFni+74mOcpLNgIS7oFXrbDzKgx3EcjVVzH8g3EIf7O0Ox826oHuVR
hmT78F/0Xc69IByIf0uAwZv//qNHg/f9uJ9/EvTX4f9z8HjfF2fLcLmQ0afY
weV9KD+lQKSk9GsTUnvbW+JSJslSDK+kOHVQuJBeBrxHTxI5hfkbiI9DB6WX
L7a3XpbwuXDxiRfL0OIyr+IAc/Gz5xWmQk4miVzaxwT3L3kUABOJU5kht6TF
adne3QVGieIrlo2P3tLFIo+i5ZVXwmO/gMfe1otWPP49A2h+/DcD0Y9woh0k
hn3xX944TmcOGsOrIPEi9znhsQ8CFYuLZZrJOTDqUeT3i6g83xIfZZqJSy+d
Q/uDpO+iAk9+idM2TL7f3t1rw8T7RBD96CMgPCcOJid98TbOfW/sBYmDzEk8
g3/Hpd8IofeA5VQWR3wHz3zpjjrnDvoj3cGPMbUjADoRa7UrOQANonUcfiPG
P3+3/2xnb1t/Ozx4uas+059Sj+fA8fFcHHpJuBQHMpM+scIU9NO1t0xJA+7H
MGRKz4dXcTA2UPKf0RXFPyLMRV+8C+PleM3X/7svfvH8eJQqWUMkdvaef29R
erHz4qX61un1esIbAQt4Pmi4y5kUiySYeyCRkzxiPOKJ8ETEzC+CVGQxqFlQ
V6jDSaeCggaSJWJBWh70rO+D/gT1jq+mMrkKfClCeQVGIx79G6lzJdO+EB+i
sUxIqeK7ozibieuZTCR1ej1bqg5FGKepiH0/T1JxHWSzICoCJNMU9HngsU0C
GeYhzCuxNgEw5oFEaHoJWSBgK3eIRRJfBWMJGAIZ5jFIwjhIoC+RBtNI9V7p
k+gBrQCAyZJa+mCC4jnQI5hD7xkIS5qHaO3EJAE2AUEGuwKoFwYH0C5ngAsY
xJys01hOgkii0RKBY3vnxva6kCfaoHaBboE/E37opWkwCRiZVCoUCFgZeaNQ
Ig/F0CmAoXGaB1kw9fScN8DZIZaZB+MxaLUOmMgkHufMKOrv9pvAeXrX+avz
17mM7QSBtGggaujadSaZnwLSc6CtGAHwiAHgMiZpAyJBL2Gcpy6oXfo1mQMZ
RQBsmcRxJnwvT8F0IocBYYCRFgsEYwFzD4yPkHi+mVZFEGTIpZnWHk8rzmeQ
pjlx8gX8UJgQmEnSLMDxwAeajsC4R2ebJ2fHFxozAHIWX4NoJMQAwPwwtQDf
AvgugGnT8+ibaXFH0ZMKo/lJ7qMEkBTRJKc5SFI28xqoQ4LjpQFgz0QE+Jgq
0ALZOAmms0xRA7FI5W+5BK1F+kDRCLWB9wnI6BILGzONgM70AqkCeHqdgBbU
XfrA2XNojGIHszkH2QZ/RgKDHd4EKdF3LrMk8FmBGhYvTnGaA7fDKMHkKFLu
JTwNJu/zzP16FB0mCXTPM08/8wMlZzQ3t7dvQDtu72zv3t3Bi0A+UKj5BKgf
oEROiAgwVUBmcB1Bv8LUvwtAg3URu6UAr+yTmjlA8BU1gB4y1PXdAoTCm07B
hgK14GMYCuXrEhhgp6Kx0aWo7+IcVNACup0sNSUVG8+ZtgHw9Qz6kdFUad0x
UzAP0hmIS3YtZWTZEEngSLcaHJC5kD54jl2lMogygXKdUSvPR8E0BzbqgjL3
tH4HnxRegOGQRFfQY0yKLyQfmyUZqIR6+cbDx12kdIryUnrLmSWyIGDQQetH
wJ+k1fEHaenCjA1QjUFwF3JMii/EGRMgARJnGqgCwIX5WBG51AW2kPgqT57T
F3J7FGd9XCwsK2Cm+YIs3zzGFmpFozkVwIqYfEawFXPMPLBII54HS7HQ6R+n
IiethjNMzESmlywkDAL6YFxWCKk/g7Y0oz5MCjIouG6ZFppaG1GaDub65zvP
t+7urAnUWBZFT7OKQH94EsbXrNLeHf1d5ClZuDi59sj2XwC98rRIBSNsSGgl
Q+Q84gSlMePsSBwgm4DzKZ7I/rTPPWwg7Hm64bZ+Sn6GAtiaNavvgT5euASS
s/SzWbbWDlTOz5JkNCuYYBBldCzub4O1/UOKeA1TBiBPPD8Ig4wMjIF6LSOM
pkKB4Y3HCTpA7LV4aD4QeGiP2oQMlBKNBB3iiDRoEsOqNQ573jQCNyfwNV0c
Ru8FMOoCh44ykln26lCXkVJSfLO7t7d3d9dn15GVFHRXlhnAhEhbpeKToC/7
XQMRzxDQK/YDIges+j1+NX1KMgrKMAUOJWxhGbGQpnM9b2xJG35EkxUGQGTo
G6ag1qoIUC3H3hJYfJfAmSSwgEgdJW1+3wEzEaKCns7Y7FXwm5MVBY9F3lgn
YJJnZJxjYF90nFM5nROjaQVkBtjrl9xCUh3oNrNqJCpo1w5V4tyDh2C6p9C4
lqkWoadCIaDiUDod9aekk7SD9HNoCRN7e6sMNKgHkFQ/CUaK2dRzxAMQTOPw
ChoAXxDmlbertEEgEvAqAmZZNnao8GAeYN6UhkL/CvoEFw2myVVR+nd8V+th
pkUvi3sk+PgBqdBzCKDcD9Uhdw7CGkrqW0l8A8CkCvRyiXkTPoOjm5OzIP4x
PP2pQVj+By68nr/cBmERYrhAyQpuxNCiAz0rjBAhXghpa4ezOpIFNwHoNKa1
jNvdW/TlYNWrlAGtEtNvoV/Q1wE5b7QEMeLJ7gTwF+GHUkz+chzG0yX48Zn9
VnDjWdo/AdtgoCwVGycfLi43uvyvOH1Pn88P//bhCJbM+Pni5+HxsfnQUW9c
/Pz+w/GB/WRb7r8/OTk8PeDG8FQUHnU2Tob/2GBXbuP92eXR+9Ph8QbSpCjq
HsvYSJLrk8DkkpObdjRjEh3f7p/93/+zvaemaGd7+yUwgpqv7eeg3HAuIh6N
ZI6/otR0gIfQ6OJsgIPhewvQ5mFKbm8KohUJnEUg63f/RMr8OhA/jPzF9t5r
9QARLjzUNCs8JJpVn1QaMxFrHtUMY6hZeF6idBHe4T8K3zXdnYc/vAlxrdXb
fvHmdafTGWqdqoWT7K9Z1WtdN1oaVrYuGVk9lDyg6xIVkjKE+lGflp4Vwwjq
ZIK6EWa9OLbSjhRE0F4Whi1GuK60q89FHKLrkeKIoGkn4O/qVX7PLDWGvg8G
FyM6YOVDcQyeXCqeDPePwUKhT0B90OoFnPIoSOfYGFgOVBMbHYmKBWQxBR1L
/g20+i33Qvo40RETQPFDrfVvQbIUatBoSbX2mWPgzcUK3DNod42CMgG1AVoM
HgE05EKrdSOSA00FfCIESJ+heikvzr9N7RJjJMHfDeI8IVcFPDAEHDvCRQ8v
/ZUbZkgvE1K3qKRQ1HTcSAWXcMZLq4gayuggEa7sTTTKcexHkv1BMnmg2n02
N2oaaOZwORzROsuXCejSCINd6JGKbLlAY9QwKWzoZ6gRIs1hHlAV5mPJ+gfc
PV64UedxkuSLzF2OOIsqgC9I9LQq52ouPXTelDMlcaNhhA4TqT1JpkdgJBea
eVPwWNKCTTfL2xe7e1vksJ0p642OOm+IYOhG2/pC1IaV/pDjAjNAVKZZjwJ6
3QYPlSIDM2OxEC0Tu0htjKES3yHGu8bIB/eaakGlJQT6iirABd4pOtTKbiJ/
4zopkzqMQsjPSd0AOMGI/F9as5PjXg91Vy0YAdwBd4qAg1L7xCZYTZrBg5kD
HLLsFa3qEooWJuCi0jxikIobslzi+7rpSNJ6qo4vxzHJm2bPKxC8MXUqXxWV
kpLr0gi6hcLLwBUqjqdFSVSnxUiJPSXpK4AHNP1IK4jM9fFteKB5oUJxMJ7j
nrOawBnAqdHTn5kZA2mcoylVLuAizlRk10TlkHUwdARW3Qk9ReDSp9XQ68hE
GIFZ0JJoPxCQq4d40Olsg87CuJS1SsgBXY6BEVj8nLzoTXjKDIJRGld77/TF
uQTHMLpvRyNcBQNsse1rty9OYKVgVVGsVLQaOtE99TuwYjiPgYLUiwd84dOy
YYZbHqyT+FW1XFBa60qFlMauY9/vfN8XhyDAIYX14rqALLrEsG5PKcwNS6k+
2X0VvVRxc0BUzYcNVK4MDcL8UjxQhVT4zShWr5RiGOpnD+UDt1lw4chYFmfF
Bh19ux/DwwCrzMETV+CsJLQOtBPThqBaxks7OGpsE5vWLs24tPNgjLZWZQC+
XlFRIDZ24tfXFO5SMgCuZR6OSxJQCb6q5dVcjgP9g4oasiTiChIkEfwhs+Mj
PVzIGAtTDTWDdLw7HF5+OD/sHb+/uOjtDz9cHA46A1pwswpTbdVeQeHt8+Gl
eTnhsDqx/VhO0W61tDz4AG3B3dStx1oDtrQ5fr9faBPG/so2CGFX1A7NC4Da
EQpMoOMxylFaYOznCoM1oCvZnqCdwvCsn7ImNFwcj9Df0C0vTk/OdEh6+/vn
sA7ZFCdHb3tHR4VANfLk6eHl/vvTd+o57ljiKrM6U040DtdJWiEjIxB71Aaq
SCu0BBMvyY7fZOhHUTuzcwWPr5ujX4pQvGYzGgf9+nKmCfolHFOo8Uo6B+RZ
i3OP1wYSXk705zvcrCr8oS/lrhFz9ErJd1LE29rBOCiHhjga0BAMQJJkM2Rc
DKtVdgQ4FIDJIlOeT9yCKkUMKCaUkky7AQJsFsbXqV40JMoLQrKqvUkEAG29
E4249pYo2n6cAzONeQHQFJBTUSXdlnwJ2jBKhYlNgyeMHG/iE5NQ3gSjgFYp
iPsYfTIQeGujS4N07VLBooxdUr4NubJqA8obe4vMbOnZiJ9ZcmWzOHVcD3ir
Ih3dWinownr2wn38YgvdX7LBHLdW4e+tbY7M2C0QpA9uC3oAgiaOR9wfEtui
4xcyQxCt67mErCbxl8Wry3Gm5Mpse9uoPS19NLX64hgsa7hkbtLxhQBZVots
PJ+DI5MtYfE1Alhh3r05zBHHzQ3fpUuYlBve+EELYCLPCAFOAq72xvGCA2Tw
lryKw1zFxi/M5N1+Y0BzJItWJ/ViDjQ0LcbsK8xgLC8BNxTcCl6vkCMyiZnl
C9wyQPwWcQQstclb8dD3Jq7DNkMMj26m+ahHX/GD+dLv9zd5Q0aFgmWoAoxK
9dOw7urISzUAYOF64BSrUQfignmOguiSg3y8kaF8KGntOFkB3rhCn/lI+6mY
atGzS8CBbYHgOI5GwozkWUY3SQ66cZ/64tEbOuIFiXZkVIyQmvns6/cwBLwa
DNv621Q3peix6g23f+o7ccL3OqJrJFe9go0xlUAc6GnVVJqiURhwQg9qPt5E
BT6wQfqUYcSgPIMi6xqB5zeNGxrBwJfAKTymgqnUHFQPLpAmOS4b0IsGdUeh
cSIw+FvO2r0MjyZKqcvK28z619JGKAg0Cv0zbOHOQG81mF7tprfqhYi8f76v
1oMMQ7g7MJsY1ZZHZ4UdZqAwLxpn4MPIhCl0AfJkqfQuTixelDzUU+M5TKDi
HmpdisvdJEYq1k6D3tYDVeF/SvO5ava0r3rncEy1dxWmUVE0suKqJ1i+EiFt
H1HcG+WTCZCz0o3eYOXfgUUxPKNBMqsD8NdD3ohS/XYO0SBoXUNr70mekIeP
QoKugOF2N+Jg54AtKkUIaQuZIvYUoklpNUZLv8x1qIv5N//b/HV442IgKG+W
39J5sz3jonU6wjHATW/xnP6l52iq78Q/MQfvV51mhj/ig0LOGfSMYzivKBnW
jz7zUyVlzlP1Q7hTfKYeM4+8gcc5APRsr/al0TLjd2pfot53axsq57NH1nLZ
Q5ccsC0+/bXSUtQ1psQ7yv/KlomcNDVS7P/GUq4BL1FGbb33wQvwwVmo+/lz
BYLmriqEXTHsHOPNTQNXUW/urIp205T+FqfFh6opuSAwi8H418rv6hXQcPqv
yLf3BHk9ePF3LfbOY1HD97ZBC9/XTU/dSxW+tw3vy/eFPtfl+0KjNfi+8P4a
fF94v8r3ZZzb5rKZsCuGreN7cQ8mKr+7YmB8hc1j7bTW8JL6Jbmp+0WUec0h
9W5tX6qFn/g9guPNui2UZ9Gbe/6b+7W4Al/zzb1aED5vmls0CEYrqapMtBJz
1UT7NZZgK5vMs7wnb3wpx3K8ilqfi7gzgO2jkB3OQhhiAW73yhHI3sc92now
iLe/rqFJg7V616+H3kiGKyaO3JLIC9dVNA1dmbdxhdw+NfQeOZv3FLqiDm9G
3/PDN63ANjBsLcbt+Nqh1qAN4iyT9VVqfVf1KrV52AiWWpbZ2t9NFpO10RmP
Y0dumybarBSKP4k230K4r7T5FoUXV5gF+2KjTSBr8KeTXW30p5P9p5MtXHD/
dLJr3//TyX5UJztbz8n+IiNf03cj8vd1YBoHdbyFL3YV1gOxbX7+fzDThZh7
p9iwFCgTTWZcuLzWSM/CW42UtIOUlWaBzCtGqce84a0iB4p1+UPU+Tn2eZVG
Yi0aibVoJBpptB7k9q3qKG4Al3IaQeUHvGFN7CJvsu7jZoh3Op1zN8/+9hs3
7b64SV58c7u3vSU4BG7zTVN9zIezd+1GUdecNDFdiO1t1T51OxhjdD1SiQX0
v2AaRJ5NXbWdckbWMAzNWTrabNK7IqResQu92aGC5bRls8Cjebxfk+I+Oydx
mJ0AysEeObt2CA5lbn2V4VQ2Ng6YgeoZ5eoQCuXazJYpbYliGlg8pY82a1Tt
W6pdR555yhWkhFfKzzOPfC/C9MHaUUyP6lCaIUDlTc05u32s/oEpSsCDOR6C
JgJQQ8qGL5MPOUIG+lydoZve+CMNTdtozo86QZx+lM4hb9w4CqUwe78qL5tF
hE8OKSVKh1bMJw39Xhl6NVv3BH+3Dfzdrwf+9wC+IngRSHsASdgU/youpXNM
xDyYtOHhmZGolK/BRDHJaJzeRtvsuG3v5PDrEbyphyLS7zzjJCBzptXAhoOW
KehIhCGYwkEBz6CDAOZYHyBcsk6gHUNnE1VvyXbdDdmCwCGIfkLnuaAzTuNT
I/Y7z8sw/80m4F+oZMEnf4svnhYAj2K9XVhGgYjXgsAjgf2iL44iYzC0sNbR
22KmGnf5GKMRBTtcRSg0HmqGLSeTd9xVFr3L52R7JYqk+YhG7Hde9lEvRU56
Lzn0i1IutpMj7ilY+KxnDNAlKnW8QG/n2J7WYCqTo9/Z3gISTcRBMJlgio24
vVX1L+7u+FQ+5XwBySuQuwraZGl6KQ+5BT1jYrDNk3AUciE7QszwODpudF9H
3NY9BKvzH4o2rtSDYygK8qyST1JUCNdg8GEg5g+lOlTvIN0dPEWvjsfdfqNP
yllL3+kM0zSnnArkMjrv79p9miycB09sTON4vKGXgOLo7GqvYPQwLeKaElKD
yOf2lERjbM2m0nGbCrzNcHfzam9TdbipJUPcow05VSta/Banm0T+f22tOYbb
Qo/QGVosHRI8Kx29sWe3f44X4hgPmAqKsi/XpI3mQUL02ZrEaWjURh23SXKz
6ewGOGN1sOCXM88WSUwUZF5T6BqNmK5AVNaAvIoJ2tvUoVluYYR8BSusbkej
GakSF3zQdJ9OmZ7Y06UnfKwUM1bVidVqzmr9X+f2Vt70KA0SVNUUa+S4Hn/L
Cde2w60KHta0NZll1wGeFZDVZOC1jndwDqxnTnHBSuOzqfLGqvqzIBoJ+5xS
v+1Xk8v92Tla9Qa+nemDOzrv/XPn86CYzau/F58Pyq+VH9W80IPORUVIOBq0
Ge6ArCB8C6yV5c3N4QI+F6DOH30Wr996qcQzkJ/F+yfboF2fwsN/wH90niTX
ramNcfMwUa0XT3r6iEIrIGWhxb4TD0+qwacf/qrHhy+fxSn8Zw5M3Lvb/TgC
izWlQ8MOZoJQSzViX97/uTolFcagMCsDOLTD0yw9Os2iDrHgSP3/+d0meyGb
8JGYhZLCPt8fc73D+fg4F3ueBNMqo6yH7XpjHKkcPl5ba5kqDbWlxkISuUd7
zIGe1vFiXJZ+VkW0dJpfGzrE+M183qh2mWT6hM4arL12T82wviVf0/dAweFC
oHIMC0V27p7C+ty5HYhvtNLmanB/3VjTQmzc8bHObzU832r37ltTJhPm5ltw
DcN8HqHvSqniRUeYFiVKlRsVDlqY8sVPKDuQD09gfYPqEf6N1sTBDT4dQWVX
0psNJ4mwcKrUqWzQKQS3fth/f3Ao3h7+dHR68VpMMDLUPuCPXN3zWW9rr78E
7t9QCY7t+Y3itiMEvt7DtS2SeLu//arDBQQprZMCcxt5Eg2wo8HCw+Oxg5t5
OIjSAbYctNMBO1skgPMNOOjJK0yohLUzVpuhdjS2IU4Pz8Lc0pCqTXrzir7S
uW1pC/9tAOEEUm7A+f0HeELAZtsfmtMhBMAdDhsnUy8KfidOYqyODi/f6dKl
T9qLnWLBUDon9xMewHhKvVLOqs8bLBvQxUc5GsDHWZYt0sHmJh5awCMin2TS
R1z7AMDm9XSTa7RuMiLQDI+PQjusuJjFA/71R92gw68NuWghfCqVPHX+flA9
1BYjfV3pqKneaE2PpXKg1b4qxT/rwCrX4qx2Uy2+WdNPpRJmtZ/6upc1fbXV
t3xNc8zlLhaWZy5VyQ8UrXXrDCqpYCjs8S8F9z6QlwvGPfGfUpFeQYx5ifV4
dbU9PONPq35VLjHgahzUgapVoiOdWNYJg1TgnFK3VNoA1DBlyFODc4k1zihq
qQ+t5HRsXKRxnqgiAiOwgwkdV5rr40ixIqQurAaImmMrdCxugUcuObs/T9Lc
wwNgMUdo0pzKV3IHuk4XWIYIj6lCs1SngJNq5CDGORg/PEH39uIApITe5fZ4
BBgAo+R7PHZEaOz1fU0CS79vU3Esp1j3F3cCSCNoGoQcMgdY6PUDdaxN/f5E
izGVRZbSirCCuodT/lSTlNhC61BdOIk0k1bDWEEwoQO1qLr+Dn+vAA8KPCuI
4HGQgUGbEO/g6QkREuxRnNEB5Q1Sn4lkRITV+EpnlpkVVRyuQ6joHjfqb7To
UwTqCypWWxW7+R129x0rSVw60ddN/EkfXAPfIA18ZS/S3rMW2HUvNPizvd4o
yMpbB/qMiEYrlJ4tlXCrOqLDBry9+Eo9qo4G453m8xF0bnYs9Cim9zuNZwMy
tM59KEoke0uMPZZwI4eiTD0HbV7TPxxp6mcVyhxU/kJc9VZQ7eypcPVD8djR
p4rWQ+QhU6fRWWfmDN0efeJ21ps4zTq7O2uiurvzcMHb3fkjBO+BKN1H8DRC
bfN3b6TvI3hfhusXCd498fgiwXsYOvcQvK8wcSsFL9zp6WVvI5KVvd6VmGiN
ZYyvznUrp8E1jnlgig0Q6hO1NauLC3Dz/kZ1gGBxpRUlgCRLA75q9EV0e65h
w2HytUZ79jijPVtjNNzSeehgYVgcKNDcUeSLYLGKH3Yr/EDVY+uwAJbGMkQ1
+ZOGwbHo4EbxhY1WTmcPr27MRj5VklXLgkbInKxM56cWimu5aoYVoLXHzb2o
gUS2lxqd7goU/un1SGI2r25XgfBBvdhMnbVGvqtAYLI5V8NwYl59FChq1Nnu
uuqsyr4WBAIgWFSl4rc4be53VaaBxq9i4FA2OOxXkIZgbACaB1HPFDvYbpUL
GFF1tkIMgnGZ9Tlv8tWqSbQjmPV+8gVMXJ28lTOHYYMmrCw/hjsGsVoKrTJn
CnZrGS28hWF21xlmJZtZjq0fxrJcy4SvGAP6aKJ5IY+1mfL7hTyGBj/bAq2z
n1oBL/apm1RRsN0WGaSFReu7LufqrKVzrMNV1XwmweRBANnQ/310oYXLhUjV
UHANVz1EBV/Rr5ldpy52oVmxWoMLautixCXgXS2jy3uzjPxqHGMKWtpcrv8Y
s8jH5JUmu8lbfj3QecnN6oWA5l9e4fDmZxNglgCm5xV6udi7EtYVo9QvE2vX
TY1kp4JnRiYqxeGLNVBMCSyTRUQNqnaQ4DLHq78qaKZUTAMUzpHtrwoHbTnQ
UK7mOBnua893BXx4QPw/AOB/Hw9PReZNV0DHbPkY4OniPE1gcg6gSqnsUoqj
veJgIOZeiJFwzXpYdRD/7aXB71JcBXGoasJtrCv8u2sI/27ZeD2u9Fe6v5f4
l2N8D5mcUrSvURGozX2jBvj9Jj1QKB3wKHCWBq7jdjOsy+1tisItV/AHAXly
+aEAnRp9hSwqJnlMYWyEcIU0FtsLvLMpm3VLBbgErJVCurlKPebSfM4DfWGK
3q+zv0xCb6oL2JN7MAqwurjVAqW4dNHPIrK5mVr3jSzed0LVOJbgl5fHbhhS
gWTynB4GTyMYpuI2p6E7RbdrgHGqXHwteKzpERd8O4zJmHtycf5UXBwdtABG
9TT+ANDoKjsarDlybK0GQNC2ycvlPVZo8Aft0ayJYFAAJa2hs1s95GtBwWPU
wFBL3jaLfKRM5bomeN3ASNGlXWl6adnhLiAeFi8pqZb7Db/bOLyZ/FYg1uTW
yqjQ+yo52ellayyt9Ipz7UnN1lxVmY7Xm9THXk4V99+al1UzWYhSmAU45iTd
w5FdTerdr0Vqp+M1Ofg/5rs+CrXbSH34dRTUPXm5pKCyByqo+05vSVW4wxcJ
yiG1dYMwKtRXH0vUUD/mZvr6Am15qhIodIyt5z/UlWlQJnZ4DSRe4tRsajXd
11v/fjndH8e9aRXuP4ryTZqlTPrdCukr0WqZtIvdOgObyVAd1kU/VkZH3VWJ
KVn2tbxAuyaxJMNRG9cmyWLytWDBK8IQlHNJlf8tQGdeNsMC0erqV/Hk/Ozd
U44m1ECI9di+FogHB/GFhQsXySqxVt/stlK620T7TL2iSkIXRVsP+3jmq1WD
NBkQ1zg8zH49aPiig92kR9dxv3S577Wg+MpqS2sry2IKrD9Ee8lHUl61s9E2
FWf3mYIvZrR1N7BKfNbsJ9n6Ke1RB3yFr7Orr1LxsO3ro8fcsNadrUyLKeQK
PGybUY/ZtqVYq9ya+3R6LWZBto3RkG/hotfAffcAZHc1/1lIdteDRK2i7gXN
qsWCAcLEf9phuM+G/5HrJVlztwYwxoa2A2MPZ94LnjIAWikXC8IpcCLvCtwV
jy8sqgHV5Lq4QH55xsHhIwr54R8v44cF3WsuPX9kmdeyLt2N+/+AyGtRXz9l
4itK/OE9tkkdUExU5fHk/rBW7NenjvEkHlX6D1sn6Y/SAXX5b2slHzXkwCkI
Ct2W/Bh9EO2E7pQpnr0O9JB8MC29Gay+4aXZC7JZx5Q7r2+Us13aO2g0/W2v
eES4kKJadrtUmiqexjbIN3hK5k5f7om2W1VnXGyEq5I1wWLnly5b43sFsXai
sz/M6/aa1Iw1s1otkHSBMVUDnBSL6zUkuZrf3Xm+U6fkD08PLl4XKkNe6Gup
9/FGvrE52H37jb6wurG0DB/uN3cc2gsZ3cOcfA914fi+GPKVe+r6O9tBLNMO
7pCqOwiJulE8xuuw39G9adgVEWGaB2O6w5tKA+hjrbv950ilN0e9AzqD2otk
BmD0kon/Ym/r+ShI7+66HXONtbmRO5PzBVWocCp34dXvw9NhlSyBF3m1JKHj
rdQmSKnMFd8QS3c8TvGuQz4zMjGYfDg/0vkaG1G6ged++c1kqYr7YY/0Mx27
/fvJsThXL2woku4+e/Hi7m7ABRHwdeh0AJxQX4Sg/QInIXT3eBp5n4/sD/hu
u6PDi5/otisAAh6dbg5fmXJejCdhQwcKEE5TFKHPkN2XNoXzwIpGTrUJ7O4U
hyhSjWmiLtdU9RFt0zOkBd51C610E4dy2B+gtpJGpxq1B9D5jEo2QAeLkKwJ
Kl91onu0JEK9gYF4RtTp44Ewp6EVSTtkAvBoOnkB3/jO1yKH8snrU2/sXYn9
mefP5krb7GNlAHGxhBnAo+tHkc9Xmm0/3xIfYY7EpZfOYUoPEn5+AZ9/ifFu
x/2hePn99i5XIf4QUeIJ3fFOh+uHc5mA/qIfD7GCwEBEPg9sqxF0OkP/UxRf
h3I81RVjPfNEV40tSxldA4nVLaPMnB43KgSL4o1kBMSlo/VU/24i5ZiqrNC3
X87FOV0p2hXncQTofPRAvAGfWQIdHci3SR6oiqonXuLHvyPOv+NNdVhlF7rp
dLgK6tiWmZ2ileCb9d4ADlQ4VX1fUZeLq3Hhu8CwY7kI/Ky+AC/Ccz1brijE
CxaGSrpyHcXe8OJovyvSmQfgKGcIhQ7NkKr9qQ6qp7ZAKAtMKCfsn8vCYyqS
ULwbTnzR319sRay/fGEXTn3sz1/exf7Zh4d28VAogBZIjv/1RbRAnv6Xv8gJ
kM+gUPHLFwIiGJ02PP5SKWhW+LvqMS5tf204fm7+aW0MOoX+XUb7Gt8Kg30u
fHz8bx1dVyK5Eb3XYEVmS43ka7Qhvv2mgxn87a2qncjfeKmT1rZz+nytR7N3
A6yD5VmwUMXp7vebg6Xz99XnD0Y70jUH2/9UITgM+7f8Bv2pqh/pYK3+dJy9
5bf15Vm1y5PF5N6N7C5jp2NLJFbepogAFtoLd8w3qrwH3+yaW7i/EQOtSRXV
CEvArY+BGUnnb35B02LpwIKNU/XX0EyXy69VKuQ7vgDWXtMVYPbphOKBXeyl
lTvj7V+nYwrMqbkBonUG6IinXOHYzI5+sSvm0ovcEtAKCPQndYV+JwWbCgXS
ddlqWx47L5dPxutnTU1oC5MiGVarVIC9a0+jKielF4Lxq0bulq5nB92Fb+kK
/nq3eP98v5zebL87hz2onLR+jmcsajDbtZhZkpsoJwcHqCT+Wsn3XV3tnPbX
I1ugc5HEo1DOsVIpF4LHw9hYgi+FXs2JHj11OJ2Bum6bxnNyrFeSMIj8MKdN
c5X5XboNuYsZ7ybNnd3fYgo5V5K3uat+nGC5eTcxXD9SQ+icc4feKr+8ieSO
/BnqJ1Ldb24xo4q0HKi5vDw2KeRP4DuWRQ5VWWTG5alzTXZAh599yTrilQjg
AfQgnphmT6leVhbHAtah+tYJkLReSkskbAJtEqeoKBC/DhutiBQbaeVXZBtd
h7yUFh4tVdpFtWNUi6rLoeYMXAroGJUWfrX2xfrgKXzmjhfK+jYkIFtBK+YE
i2G0NBxnpABBBspjukOGtdxTrBhsL3bwRljCUpetpzvrwzQuFRrH2XWRtOWQ
26iGFTk54Aq8oMwNymD0Wy5zyRXg+NSLkl7FP3j/Netwg0ScONnmWOYTYOZe
5ramoRdOY6DHbG4JdH54gBXfDw9e7sK6DXrB4NoxF4F/sfPiJdeoPCpefHB4
s4BFMRUSa14PUnE0T9/K4nsLDIyqgCnXrvsWya46ElOOGZAmNPcsMBONsRu+
FYDWyNWye6r+v5GrKxiUBsBgmCpmB8iaWBuXWqNIrRmLb3Hf5msOVGYBjj1N
PPAnmI/wSK9iBI52jni9asJ2GFrFwntIbDBNc1CM8yDFynxH8CSY050uMd+f
nuO2SMDxRpxRnnriBcAXZjcJMJIHxIrntLGgyzrznTHeVcyXoqN+AJ690jej
d5VeR2kCaUEF9lse+J+MltbVBbiGH1YNNPfphEtQf6j3wkWq1A9O2G9Y1U8R
gGKZ0NU491Fv6wxwfUlKTjF6jLwFkVby1OQKy7Ly8l+JO65YgfyAVkqlC7G+
4HRmbod3CY+RaVXdmqsEpqD2cS/MzALGS6YykgkiQWFsSdc9jKRLaV3uJvNS
usseiWvKgQO09WW76YYbxzChXtPg4L0CNKsq1Ev4uiVnDaFBY0vkBLzBSEVF
YKqoflGI8F9JCtcC4xAfg9aNKbIIrbpCfQFekx4G9NVpJmQsIDaYKeoKrBIr
LgWMR621X6dPQBmlgXOBJshznyXlSxSw5GI8Ze7oq6KHY+lzOULQpLmvY/vO
uff5SFVUTl2hwQFxotT0lCZmjBHNObNNpUR7SlfrnMZvS1dQKJUIbkgY/E5q
nYJDEapy8jzMA/Ar53ECCj4BI4JpbqiP6MYNYjev0jkFgQsX/ZjYktnjxuF5
BKIapfMRmXCWQcmiaE7ysMho6GQYBLTjxf3ZvSDfFmFOZ8Qi7jUb5l4BfYVU
uT+WMZWl4/T1RPanfXuWDF0LI6YslhObl4iV5582DK9oQXcGnWk1C5MN4lO4
16XIGdVELXM5EzkwyB1lN+i46AZ1TXlUR49gu0TClKIRwcJP+ydn4jKYY1Vg
dd4S/PoULCGxMA4Js6uijGj1TZYY2pqAp9sqwCoCpOOLt5oAHM7NJayE0bwo
x4J6Y0mhiv7QGWJsJo7uBfBYUJFt5BhAfR/RvSKzmAAq35dT3Nczc4/dKiJ2
hSRFSAsOM0JhRaURx0MLMMmq6Jq6rkxhSKgFpOewaKyCI+CrZjy6+6u+FAjL
IAD01226nokjzuD4cBJwQe1YU6ya4Wpv4oEydDJ4wXWRuEVhG7vQqD0ZYh8u
AbY0vp3TSeosG9Hf55tzSGy0tiDbO5LZtZRR27UglZCDuTCDVx6NDVWJeONe
6xUQ3g4FzgJgApRG1eHMu0Y95JpjdGDCnJdwhQomFjMs6f4nnt6UxWatV/Vd
Vi3s33KfD90VxRiga20MJepP9jyWzrqddTxncfQEKqcuc2IlMEA84hjontLv
DIJ7ywYITBL4eB9UHFUsbvXyQIKUdQQpTrZCwI8TpEyJR/XojsMNxip1whDQ
Rl9WRgAWMaXlI38cSZhEukkkjJfkoPN1agiBz74v3V5CHgT8qi44AHYtgjXJ
yHwVx1Evow/qJYwZj0d3Yqnr71TCVKGMIpFCeU5c8bTrpjlV8klIqdAlNlTI
DR1fWHHiiW6UILW7Ay5+rPZ2JhJ/5DPWPN1c3pGuvxraS7hqwPEUG43B2Nuw
AjNYoEuEjWkygHw5TLM0oQznajGTWsJ3XwGtPLqFzhgiJ1eDmStgta0KZZOr
Yq+MQA0osjyKZNhVeQ1KF2qHi6+SUUTkRS55DOZSK1ls8ApZjwol4sDUc4gs
B3aFKxpOLEMDe1/Ec1m6m4631YzzYu4gMrYmroWU7+z6SA4FVRWvOrAIUko2
RV11N5Zy0SUhiII5XsJYXCsiHHRHmnnODjjY9RTWhdwJLLz+HyDWSyE+tQAA

-->

</rfc>

