<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="IM for Packet Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="September" day="19"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 78?>

<t>The primary function of a network is to transport and deliver packets according to service level objectives.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss provides the most direct signal for network operations to identify the customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<?line 82?>

<section anchor="introduction"><name>Introduction</name>
<t>To effectively automate network operations, a network operator must be able to detect anomalous packet loss, determine its root cause, and then apply appropriate actions to mitigate any customer-impacting issues.  Some packet loss is normal or intended in IP/MPLS networks, however.  Therefore, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions is taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>Existing metrics for reporting packet loss, such as ifInDiscards, ifOutDiscards, ifInErrors, and ifOutErrors defined in <xref target="RFC1213"/>, are insufficient for several reasons. First, they lack precision; for instance, ifInDiscards aggregates all discarded inbound packets without specifying the cause, making it challenging to distinguish between intended and unintended discards. Second, these definitions are ambiguous, leading to inconsistent vendor implementations. For example, in some implementations ifInErrors accounts only for errored packets that are dropped, while in others, it includes all errored packets, whether they are dropped or not. Many implementations support more discard metrics than these, however, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting. For example, <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity (e.g., the "For us" reason code) to support automated root cause analysis and impact mitigation.</t>

<t>Hence, this document presents an information model for packet loss reporting, introducing a classification scheme to facilitate automated mitigation of unintended packet loss. The model addresses the aforementioned issues while remaining protocol-agnostic and implementation-independent, in accordance with <xref target="RFC3444"/>.</t>

<t>The specific implementations of this information model (i.e., protocols and associated data models) are outside the scope of this document.  The scope of this document is limited to reporting packet loss at Layer 3 and frames discarded at Layer 2, although the information model might be extended in future to cover segments dropped at Layer 4. This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

<t><xref target="problem"/> describes the problem to be solved. <xref target="model"/> describes the information model and requirements with a set of examples.  <xref target="mapping"/> provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  <xref target="module"/> presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>A packet discard is any packet dropped by a device, whether intentionally or unintentionally.</t>

<t>Intended packet loss refers to packet discards that occur due to deliberate network policies or configurations - such as Access Control Lists (ACLs) or policing mechanisms - designed to enforce security or quality of service.</t>

<t>Unintended packet loss refers to packet discards resulting from network errors, misconfigurations, hardware failures, or other anomalies not aligned with the network operator's intended behaviour. These losses negatively impact network performance and service delivery.</t>

<t>For example, intended packet loss occurs when packets are dropped because they match a security policy denying certain traffic types. Unintended packet loss might happen due to a faulty interface causing corrupted packets, leading to their discard.</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an Access Control List (ACL) and being dropped.  While the specific definition of unintended packet loss is network-dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by automatically mitigating unintended packet loss:</t>

<t><list style="numbers" type="1">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a network operator as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<dl>
  <dt>FEATURE-LOSS-CAUSE:</dt>
  <dd>
    <t>The cause of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-RATE:</dt>
  <dd>
    <t>The rate and/or degree of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-DURATION:</dt>
  <dd>
    <t>The duration of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-LOCATION:</dt>
  <dd>
    <t>The location of the loss.</t>
  </dd>
</dl>

<t>FEATURE-LOSS-RATE, FEATURE-LOSS-DURATION, and FEATURE-LOSS-LOCATION are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/>. FEATURE-LOSS-CAUSE, however, is dependent on the classification scheme used for packet loss reporting. The next section defines a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<section anchor="rationale"><name>Design Rationale</name>

<t>This document uses YANG <xref target="RFC6020"/> to represent the information model for three main reasons. First, YANG, along with its data structure extensions <xref target="RFC8791"/>, allows designers to define the model in an abstract way, decoupled from specific implementations. This abstraction ensures consistency and provides flexibility for diverse potential implementations, with the structure and groupings easily adaptable to data models such as those specific to SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/>, RESTCONF <xref target="RFC8040"/>, or IPFIX <xref target="RFC7011"/>.  Second, this approach ensures a lossless translation from the information model to a YANG data model, preserving both semantics and structure. Lastly, YANG capitalises on the community's broad familiarity with its syntax and use, facilitating easier adoption and evolution.</t>

</section>
<section anchor="structure"><name>Structure</name>
<t>The classification scheme is structured as a hierarchical tree that follows the structure: component/direction/type/layer/sub-type/sub-sub-type/.../metric.  The elements of the tree are defined as follows:</t>

<t><list style="symbols">
  <t>Component: Specifies where in the device the discard is accounted. It can be:
  <list style="symbols">
      <t>interface: Discards associated with a specific network interface.</t>
      <t>control-plane: Discards related to the device's control plane.</t>
      <t>flow: Discards associated with a specific traffic flow.</t>
    </list></t>
  <t>Direction:
  <list style="symbols">
      <t>ingress: Discards occurring on incoming packets or frames.</t>
      <t>egress: Discards occurring on outgoing packets or frames.</t>
    </list></t>
  <t>Type:
  <list style="symbols">
      <t>traffic: Counters for successfully received or transmitted packets or frames.</t>
      <t>discards: Counters for packets or frames that were dropped.</t>
    </list></t>
  <t>Layer:
  <list style="symbols">
      <t>l2: Layer 2 discards, such as frames with CRC errors.</t>
      <t>l3: Layer 3 discards, such as IP packets with invalid headers.</t>
    </list></t>
  <t>Sub-Type:
  <list style="symbols">
      <t>For discards:
      <list style="symbols">
          <t>errors: Discards due to errors in processing packets or frames (e.g., checksum errors).</t>
          <t>policy: Discards due to policy enforcement (e.g., ACL drops).</t>
          <t>no-buffer: Discards due to lack of buffer space (e.g., congestion-related drops).</t>
        </list></t>
    </list></t>
</list></t>

<t>Each sub-type may further contain specific reasons for discards, providing more detailed insight into the cause of packet loss.</t>

<figure><artwork><![CDATA[
module: ietf-packet-discard-reporting

  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint32
       |     |  |     +-- crc-error?       uint32
       |     |  |     +-- invalid-mac?     uint32
       |     |  |     +-- invalid-vlan?    uint32
       |     |  |     +-- invalid-frame?   uint32
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint32
       |     |  |  |  +-- checksum-error?   uint32
       |     |  |  |  +-- mtu-exceeded?     uint32
       |     |  |  |  +-- invalid-packet?   uint32
       |     |  |  |  +-- ttl-expired?      uint32
       |     |  |  +-- no-route?        uint32
       |     |  |  +-- invalid-sid?     uint32
       |     |  |  +-- invalid-label?   uint32
       |     |  +-- hardware
       |     |     +-- packets?        uint32
       |     |     +-- parity-error?   uint32
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint32
       |     |  |  +-- acl?      uint32
       |     |  +-- l3
       |     |     +-- packets?      uint32
       |     |     +-- acl?          uint32
       |     |     +-- policer
       |     |     |  +-- packets?   uint32
       |     |     |  +-- bytes?     uint32
       |     |     +-- null-route?   uint32
       |     |     +-- rpf?          uint32
       |     |     +-- ddos?         uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint32
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint32
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint32
       |     |     +-- policer
       |     |        +-- packets?   uint32
       |     |        +-- bytes?     uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
             +-- traffic
             |  +-- packets?   uint32
             |  +-- bytes?     uint32
             +-- discards
                +-- packets?   uint32
                +-- bytes?     uint32
                +-- policy
                   +-- packets?   uint32
]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

</section>
<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device, while requirement 11 relates to packets destined for or originating from the device:</t>

<t><list style="numbers" type="1">
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>MUST</bcp14> be reported.</t>
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the Layer 2 traffic class or the Layer 2 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the Layer 3 traffic class or the Layer 3 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>A frame accounted for at Layer 2 <bcp14>SHOULD NOT</bcp14> be accounted for at Layer 3 and vice versa.  An implementation <bcp14>MUST</bcp14> indicate which layers a discard is counted against.</t>
  <t>The aggregate Layer 2 and Layer 3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying frames or packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the Layer 2 and Layer 3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no-buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no-buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/traffic/l3/v4/unicast/packets</t>
  <t>interface/ingress/traffic/l3/v4/unicast/bytes</t>
  <t>interface/ingress/traffic/qos/class_0/packets</t>
  <t>interface/ingress/traffic/qos/class_0/bytes</t>
</list></t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/discards/l3/v6/unicast/packets</t>
  <t>interface/ingress/discards/l3/v6/unicast/bytes</t>
  <t>interface/ingress/discards/l3/rx/ttl-expired/packets</t>
</list></t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:</t>

<t><list style="symbols">
  <t>interface/egress/discards/l3/v4/unicast/packets</t>
  <t>interface/egress/discards/l3/v4/unicast/bytes</t>
  <t>interface/egress/discards/no-buffer/class_0/packets</t>
  <t>interface/egress/discards/no-buffer/class_0/bytes</t>
</list></t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<texttable title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table">
      <ttcol align='left'>Discard class</ttcol>
      <ttcol align='left'>Cause</ttcol>
      <ttcol align='center'>Discard rate</ttcol>
      <ttcol align='center'>Discard duration</ttcol>
      <ttcol align='center'>Unintended?</ttcol>
      <ttcol align='left'>Possible actions</ttcol>
      <c>ingress/discards/errors/l2/rx</c>
      <c>Upstream device or link error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take upstream link or device out-of-service</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Tracert</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Routing loop</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>.*/policy/.*</c>
      <c>Policy</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Config error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Invalid destination</c>
      <c>&gt;Baseline</c>
      <c>O(10min)</c>
      <c>N</c>
      <c>Escalate to operator</c>
      <c>ingress/discards/errors/local</c>
      <c>Device errors</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take device out-of-service</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Bring capacity back into service or move traffic</c>
</texttable>

<t>The 'Baseline' in the 'Discard Rate' column is both discard class and network dependent.</t>

</section>
<section anchor="module"><name>YANG Module</name>

<t>The "ietf-packet-discard-reporting" uses the "sx" structure defined in <xref target="RFC8791"/>.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-packet-discard-reporting@2024-06-04.yang"
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Grouping for 64-bit Layer 3 packet counters.";
    leaf packets {
      type uint64;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Grouping for 64-bit packet and byte counters.";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-64 {
    description
      "Grouping for 64-bit frame counters.";
    leaf frames {
      type uint64;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Grouping for 64-bit Layer 2 frame and byte counters.";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping basic-packets-32 {
    description
      "Grouping for 32-bit Layer 3 packet counters.";
    leaf packets {
      type uint32;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-32 {
    description
      "Grouping for 32-bit Layer 3 packet and byte counters.";
    uses basic-packets-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-32 {
    description
      "Grouping for 32-bit Layer 2 frame counters.";
    leaf frames {
      type uint32;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-32 {
    description
      "Grouping for 32-bit Layer 2 frame and byte counters.";
    uses basic-frames-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters.";
    uses basic-frames-bytes-64;
  }

  identity address-family {
    description
      "Defines a type for the address family.";
  }

  identity ipv4 {
    base address-family;
    description
      "Identity for an IPv4 address family.";
  }

  identity ipv6 {
    base address-family;
    description
      "Identity for an IPv6 address family.";
  }

  identity all {
    base address-family;
    description
      "Identity for all address families.";
  }

  grouping ip {
    description
      "Layer 3 traffic counters per address family.";
    list address-family-stat {
      key "address-family";
      description
        "Reports per address family traffic counters.";
      leaf address-family {
        type identityref {
          base address-family;
        }
        description
          "Specifies an address family.";
      }
      uses basic-packets-bytes-64;
      container unicast {
        description
          "Reports unicast traffic counters.";
        uses basic-packets-bytes-64;
      }
      container multicast {
        description
          "Reports multicast traffic counters.";
        uses basic-packets-bytes-64;
      }
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters.";
      uses ip;
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic
       counters.";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters.";
      leaf id {
        type string;
        description
          "QoS class identifier.";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "Overall traffic counters.";
    container l2 {
      description
        "Layer 2 traffic counters.";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters.";
      uses l3-traffic;
    }
    container qos {
      description
        "QoS traffic counters.";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters.";
    container ingress {
      description
        "Control plane ingress counters.";
      container traffic {
        description
          "Control plane ingress packets received.";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane ingress packet discard counters.";
        uses basic-packets-bytes-32;
        container policy {
          description
            "Number of control plane packets discarded
             due to policy.";
          uses basic-packets-32;
        }
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame error discard counters.";
    container rx {
      description
        "Layer 2 ingress frame receive error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of frames discarded due to errors with the received frame.";
      }
      leaf crc-error {
        type uint32;
        description
          "The number of frames discarded due to CRC error.";
      }
      leaf invalid-mac {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           MAC address.";
      }
      leaf invalid-vlan {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           VLAN tag.";
      }
      leaf invalid-frame {
        type uint32;
        description
          "The number of invalid frames discarded due to other reasons.";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error discard counters.";
    container rx {
      description
        "Layer 3 ingress packet receive error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors in the received packet.";
      }
      leaf checksum-error {
        type uint32;
        description
          "The number of received packets discarded due to a checksum
           error.";
      }
      leaf mtu-exceeded {
        type uint32;
        description
          "The number of received packets discarded due to MTU
           exceeded.";
      }
      leaf invalid-packet {
        type uint32;
        description
          "The number of invalid packets discarded due to other reasons.";
      }
      leaf ttl-expired {
        type uint32;
        description
          "The number of received packets discarded due to expired
           TTL.";
      }
    }
    leaf no-route {
      type uint32;
      description
        "The number of packets discarded due to no route.";
    }
    leaf invalid-sid {
      type uint32;
      description
        "The number of packets discarded due to an invalid Segment Routing (SR) SID.";
    }
    leaf invalid-label {
      type uint32;
      description
        "The number of packets discarded due to an invalid MPLS label.";
    }
  }

  grouping errors-l3-hw {
    description
      "Hardware error discard counters.";
    leaf packets {
      type uint32;
      description
        "The number of packets discarded due to hardware errors.";
    }
    leaf parity-error {
      type uint32;
      description
        "The number of packets discarded due to parity errors.";
    }
  }

  grouping errors-rx {
    description
      "Ingress error discard counters.";
    container l2 {
      description
        "Layer 2 received frame error discard counters.";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error discard counters.";
      uses errors-l3-rx;
    }
    container hardware {
      description
        "Hardware error discard counters.";
      uses errors-l3-hw;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error discard counters.";
    container tx {
      description
        "Layer 2 transmit frame error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of Layer 2 frames discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error discard counters.";
    container tx {
      description
        "Layer 3 transmit packet error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error discard counters.";
    container l2 {
      description
        "Layer 2 transmit frame error discard counters.";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error discard counters.";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard
       counters.";
    leaf frames {
      type uint32;
      description
        "The number of Layer 2 frames discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of frames discarded due to
         Layer 2 ACL.";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard
       counters.";
    leaf packets {
      type uint32;
      description
        "The number of Layer 3 packets discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to
         Layer 3 ACL.";
    }
    container policer {
      description
        "Ingress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
    leaf null-route {
      type uint32;
      description
        "The number of packets discarded due to matching a
         null route.";
    }
    leaf rpf {
      type uint32;
      description
        "The number of packets discarded due to failing Reverse
         Path Forwarding (RPF) check failure.";
    }
    leaf ddos {
      type uint32;
      description
        "The number of packets discarded due to DDoS
         protection.";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet
       discard counters.";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters.";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters.";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters.";
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to Layer 3
         egress ACL.";
    }
    container policer {
      description
        "Egress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
  }

  grouping policy-tx {
    description
      "Policy egress packet discard counters.";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters.";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level packet traffic and discard counters.";
    container ingress {
      description
        "Ingress counters.";
      container traffic {
        description
          "Ingress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Ingress discard counters.";
        container l2 {
          description
            "Ingress Layer 2 frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Ingress Layer 3 packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress packet error discard counters.";
          uses errors-rx;
        }
        container policy {
          description
            "Policy-related ingress packet discard counters.";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters.";
      container traffic {
        description
          "Egress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Egress packet and frame discard counters.";
        container l2 {
          description
            "Layer 2 egress frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error discard counters.";
          uses errors-tx;
        }
        container policy {
          description
            "Policy-related egress packet discard counters.";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters.";
      uses control-plane;
    }
  }

  /*
   * Main structure definition
   */

  sx:structure packet-discard-reporting {
    description
      "Specifies the abstract structure of packet discard reporting data.";
    list interface {
      key "name";
      description
        "Indicates a list of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Indicates the name of the interface.";
      }
      uses interface;
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG module using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this document has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC8791">
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. BjÃ¶rklund" initials="M." surname="BjÃ¶rklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8791"/>
  <seriesInfo name="DOI" value="10.17487/RFC8791"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC6020">
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <date month="October" year="2010"/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6020"/>
  <seriesInfo name="DOI" value="10.17487/RFC6020"/>
</reference>

<reference anchor="RFC3688">
  <front>
    <title>The IETF XML Registry</title>
    <author fullname="M. Mealling" initials="M." surname="Mealling"/>
    <date month="January" year="2004"/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="81"/>
  <seriesInfo name="RFC" value="3688"/>
  <seriesInfo name="DOI" value="10.17487/RFC3688"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor="RFC2475">
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname="S. Blake" initials="S." surname="Blake"/>
    <author fullname="D. Black" initials="D." surname="Black"/>
    <author fullname="M. Carlson" initials="M." surname="Carlson"/>
    <author fullname="E. Davies" initials="E." surname="Davies"/>
    <author fullname="Z. Wang" initials="Z." surname="Wang"/>
    <author fullname="W. Weiss" initials="W." surname="Weiss"/>
    <date month="December" year="1998"/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2475"/>
  <seriesInfo name="DOI" value="10.17487/RFC2475"/>
</reference>

<reference anchor="RFC8289">
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname="K. Nichols" initials="K." surname="Nichols"/>
    <author fullname="V. Jacobson" initials="V." surname="Jacobson"/>
    <author fullname="A. McGregor" initials="A." role="editor" surname="McGregor"/>
    <author fullname="J. Iyengar" initials="J." role="editor" surname="Iyengar"/>
    <date month="January" year="2018"/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8289"/>
  <seriesInfo name="DOI" value="10.17487/RFC8289"/>
</reference>

<reference anchor="RFC1213">
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname="K. McCloghrie" initials="K." surname="McCloghrie"/>
    <author fullname="M. Rose" initials="M." surname="Rose"/>
    <date month="March" year="1991"/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="17"/>
  <seriesInfo name="RFC" value="1213"/>
  <seriesInfo name="DOI" value="10.17487/RFC1213"/>
</reference>

<reference anchor="RFC7270">
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname="A. Yourtchenko" initials="A." surname="Yourtchenko"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <author fullname="B. Claise" initials="B." surname="Claise"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7270"/>
  <seriesInfo name="DOI" value="10.17487/RFC7270"/>
</reference>

<reference anchor="RFC3444">
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname="A. Pras" initials="A." surname="Pras"/>
    <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
    <date month="January" year="2003"/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3444"/>
  <seriesInfo name="DOI" value="10.17487/RFC3444"/>
</reference>

<reference anchor="RFC8340">
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="215"/>
  <seriesInfo name="RFC" value="8340"/>
  <seriesInfo name="DOI" value="10.17487/RFC8340"/>
</reference>

<reference anchor="RFC1157">
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname="J.D. Case" initials="J.D." surname="Case"/>
    <author fullname="M. Fedor" initials="M." surname="Fedor"/>
    <author fullname="M.L. Schoffstall" initials="M.L." surname="Schoffstall"/>
    <author fullname="J. Davin" initials="J." surname="Davin"/>
    <date month="May" year="1990"/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="1157"/>
  <seriesInfo name="DOI" value="10.17487/RFC1157"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC7011">
  <front>
    <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
    <author fullname="B. Claise" initials="B." role="editor" surname="Claise"/>
    <author fullname="B. Trammell" initials="B." role="editor" surname="Trammell"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <date month="September" year="2013"/>
    <abstract>
      <t>This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network. In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required. This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process. This document obsoletes RFC 5101.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="77"/>
  <seriesInfo name="RFC" value="7011"/>
  <seriesInfo name="DOI" value="10.17487/RFC7011"/>
</reference>


<reference anchor="I-D.ietf-netmod-rfc8407bis">
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author fullname="Andy Bierman" initials="A." surname="Bierman">
         <organization>YumaWorks</organization>
      </author>
      <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
         <organization>Orange</organization>
      </author>
      <author fullname="Qin Wu" initials="Q." surname="Wu">
         <organization>Huawei</organization>
      </author>
      <date day="27" month="September" year="2024"/>
      <abstract>
	 <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-17"/>
   
</reference>




    </references>

</references>


<?line 1110?>

<section anchor="wheredropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single-ASIC, shared-buffered type device. Packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     |>  Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null-route

Unintended                 error/rx/l2   error/l3/rx   no-buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no-route
                                         error/l3/rx/ttl-expired

]]></artwork></figure>

<section anchor="discard-class-descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received L2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl-expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no-route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no-buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="implementation-experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers" type="1">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps limit the quantity of data produced per interface, thus constraining the data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are many possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null-route/packets and interface/ingress/discards/errors/no-route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, additional context is needed to determine if ACL discards are intended or due to a misconfigured ACL, i.e., with configuration validation before deployment or by detecting a significant change in ACL discards after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 32-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunnelled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
B7uewrqQO4GF1/8A5zwerg+xAAA=

-->

</rfc>

