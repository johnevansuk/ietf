<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="IM for Packet Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="September" day="19"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The primary function of a network is to transport and deliver packets according to service level objectives.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss provides the most direct signal for network operations to identify the customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>
<t>To effectively automate network operations, a network operator must be able to detect anomalous packet loss, determine its root cause, and then apply appropriate actions to mitigate any customer-impacting issues.  Some packet loss is normal or intended in IP/MPLS networks, however.  Therefore, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions is taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>Existing metrics for reporting packet loss, such as ifInDiscards, ifOutDiscards, ifInErrors, and ifOutErrors defined in <xref target="RFC1213"/>, are insufficient for several reasons. First, they lack precision; for instance, ifInDiscards aggregates all discarded inbound packets without specifying the cause, making it challenging to distinguish between intended and unintended discards. Second, these definitions are ambiguous, leading to inconsistent vendor implementations. For example, in some implementations ifInErrors accounts only for errored packets that are dropped, while in others, it includes all errored packets, whether they are dropped or not. Many implementations support more discard metrics than these, however, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting. For example, <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity (e.g., the "For us" reason code) to support automated root cause analysis and impact mitigation.</t>

<t>Hence, this document presents an information model for packet loss reporting, introducing a classification scheme to facilitate automated mitigation of unintended packet loss. The model addresses the aforementioned issues while remaining protocol-agnostic and implementation-independent, in accordance with <xref target="RFC3444"/>.</t>

<t>The specific implementations of this information model (i.e., protocols and associated data models) are outside the scope of this document.  The scope of this document is limited to reporting packet loss at Layer 3 and frames discarded at Layer 2, although the information model might be extended in future to cover segments dropped at Layer 4. This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

<t><xref target="problem"/> describes the problem to be solved. <xref target="model"/> describes the information model and requirements with a set of examples.  <xref target="mapping"/> provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  <xref target="module"/> presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>A packet discard is any packet dropped by a device, whether intentionally or unintentionally.</t>

<t>Intended packet loss refers to packet discards that occur due to deliberate network policies or configurations - such as Access Control Lists (ACLs) or policing mechanisms - designed to enforce security or quality of service.</t>

<t>Unintended packet loss refers to packet discards resulting from network errors, misconfigurations, hardware failures, or other anomalies not aligned with the network operator's intended behaviour. These losses negatively impact network performance and service delivery.</t>

<t>For example, intended packet loss occurs when packets are dropped because they match a security policy denying certain traffic types. Unintended packet loss might happen due to a faulty interface causing corrupted packets, leading to their discard.</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an Access Control List (ACL) and being dropped.  While the specific definition of unintended packet loss is network-dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by automatically mitigating unintended packet loss:</t>

<t><list style="numbers">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a network operator as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<dl>
  <dt>FEATURE-LOSS-CAUSE:</dt>
  <dd>
    <t>The cause of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-RATE:</dt>
  <dd>
    <t>The rate and/or degree of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-DURATION:</dt>
  <dd>
    <t>The duration of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-LOCATION:</dt>
  <dd>
    <t>The location of the loss.</t>
  </dd>
</dl>

<t>FEATURE-LOSS-RATE, FEATURE-LOSS-DURATION, and FEATURE-LOSS-LOCATION are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/>. FEATURE-LOSS-CAUSE, however, is dependent on the classification scheme used for packet loss reporting. The next section defines a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<section anchor="rationale"><name>Design Rationale</name>

<t>This document uses YANG <xref target="RFC6020"/> to represent the information model for three main reasons. First, YANG, along with its data structure extensions <xref target="RFC8791"/>, allows designers to define the model in an abstract way, decoupled from specific implementations. This abstraction ensures consistency and provides flexibility for diverse potential implementations, with the structure and groupings easily adaptable to data models such as those specific to SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/>, RESTCONF <xref target="RFC8040"/>, or IPFIX <xref target="RFC7011"/>.  Second, this approach ensures a lossless translation from the information model to a YANG data model, preserving both semantics and structure. Lastly, YANG capitalises on the community's broad familiarity with its syntax and use, facilitating easier adoption and evolution.</t>

</section>
<section anchor="structure"><name>Structure</name>
<t>The classification scheme is structured as a hierarchical tree that follows the structure: component/direction/type/layer/sub-type/sub-sub-type/.../metric.  The elements of the tree are defined as follows:</t>

<t><list style="symbols">
  <t>Component: Specifies where in the device the discard is accounted. It can be:
  <list style="symbols">
      <t>interface: Discards associated with a specific network interface.</t>
      <t>control-plane: Discards related to the device's control plane.</t>
      <t>flow: Discards associated with a specific traffic flow.</t>
    </list></t>
  <t>Direction:
  <list style="symbols">
      <t>ingress: Discards occurring on incoming packets or frames.</t>
      <t>egress: Discards occurring on outgoing packets or frames.</t>
    </list></t>
  <t>Type:
  <list style="symbols">
      <t>traffic: Counters for successfully received or transmitted packets or frames.</t>
      <t>discards: Counters for packets or frames that were dropped.</t>
    </list></t>
  <t>Layer:
  <list style="symbols">
      <t>l2: Layer 2 discards, such as frames with CRC errors.</t>
      <t>l3: Layer 3 discards, such as IP packets with invalid headers.</t>
    </list></t>
  <t>Sub-Type:
  <list style="symbols">
      <t>For discards:
      <list style="symbols">
          <t>errors: Discards due to errors in processing packets or frames (e.g., checksum errors).</t>
          <t>policy: Discards due to policy enforcement (e.g., ACL drops).</t>
          <t>no-buffer: Discards due to lack of buffer space (e.g., congestion-related drops).</t>
        </list></t>
    </list></t>
</list></t>

<t>Each sub-type may further contain specific reasons for discards, providing more detailed insight into the cause of packet loss.</t>

<figure><artwork><![CDATA[
module: ietf-packet-discard-reporting

  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint32
       |     |  |     +-- crc-error?       uint32
       |     |  |     +-- invalid-mac?     uint32
       |     |  |     +-- invalid-vlan?    uint32
       |     |  |     +-- invalid-frame?   uint32
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint32
       |     |  |  |  +-- checksum-error?   uint32
       |     |  |  |  +-- mtu-exceeded?     uint32
       |     |  |  |  +-- invalid-packet?   uint32
       |     |  |  |  +-- ttl-expired?      uint32
       |     |  |  +-- no-route?        uint32
       |     |  |  +-- invalid-sid?     uint32
       |     |  |  +-- invalid-label?   uint32
       |     |  +-- hardware
       |     |     +-- packets?        uint32
       |     |     +-- parity-error?   uint32
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint32
       |     |  |  +-- acl?      uint32
       |     |  +-- l3
       |     |     +-- packets?      uint32
       |     |     +-- acl?          uint32
       |     |     +-- policer
       |     |     |  +-- packets?   uint32
       |     |     |  +-- bytes?     uint32
       |     |     +-- null-route?   uint32
       |     |     +-- rpf?          uint32
       |     |     +-- ddos?         uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint32
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint32
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint32
       |     |     +-- policer
       |     |        +-- packets?   uint32
       |     |        +-- bytes?     uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
             +-- traffic
             |  +-- packets?   uint32
             |  +-- bytes?     uint32
             +-- discards
                +-- packets?   uint32
                +-- bytes?     uint32
                +-- policy
                   +-- packets?   uint32
]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

</section>
<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device, while requirement 11 relates to packets destined for or originating from the device:</t>

<t><list style="numbers">
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>MUST</bcp14> be reported.</t>
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the Layer 2 traffic class or the Layer 2 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the Layer 3 traffic class or the Layer 3 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>A frame accounted for at Layer 2 <bcp14>SHOULD NOT</bcp14> be accounted for at Layer 3 and vice versa.  An implementation <bcp14>MUST</bcp14> indicate which layers a discard is counted against.</t>
  <t>The aggregate Layer 2 and Layer 3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying frames or packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the Layer 2 and Layer 3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no-buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no-buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/traffic/l3/v4/unicast/packets</t>
  <t>interface/ingress/traffic/l3/v4/unicast/bytes</t>
  <t>interface/ingress/traffic/qos/class_0/packets</t>
  <t>interface/ingress/traffic/qos/class_0/bytes</t>
</list></t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/discards/l3/v6/unicast/packets</t>
  <t>interface/ingress/discards/l3/v6/unicast/bytes</t>
  <t>interface/ingress/discards/l3/rx/ttl-expired/packets</t>
</list></t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:</t>

<t><list style="symbols">
  <t>interface/egress/discards/l3/v4/unicast/packets</t>
  <t>interface/egress/discards/l3/v4/unicast/bytes</t>
  <t>interface/egress/discards/no-buffer/class_0/packets</t>
  <t>interface/egress/discards/no-buffer/class_0/bytes</t>
</list></t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<texttable title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table">
      <ttcol align='left'>Discard class</ttcol>
      <ttcol align='left'>Cause</ttcol>
      <ttcol align='center'>Discard rate</ttcol>
      <ttcol align='center'>Discard duration</ttcol>
      <ttcol align='center'>Unintended?</ttcol>
      <ttcol align='left'>Possible actions</ttcol>
      <c>ingress/discards/errors/l2/rx</c>
      <c>Upstream device or link error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take upstream link or device out-of-service</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Tracert</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Routing loop</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>.*/policy/.*</c>
      <c>Policy</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Config error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Invalid destination</c>
      <c>&gt;Baseline</c>
      <c>O(10min)</c>
      <c>N</c>
      <c>Escalate to operator</c>
      <c>ingress/discards/errors/local</c>
      <c>Device errors</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take device out-of-service</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Bring capacity back into service or move traffic</c>
</texttable>

<t>The 'Baseline' in the 'Discard Rate' column is both discard class and network dependent.</t>

</section>
<section anchor="module"><name>YANG Module</name>

<t>The "ietf-packet-discard-reporting" uses the "sx" structure defined in <xref target="RFC8791"/>.</t>

<figure><artwork><![CDATA[
<CODE BEGINS> file "ietf-packet-discard-reporting@2024-06-04.yang"
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Grouping for 64-bit Layer 3 packet counters.";
    leaf packets {
      type uint64;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Grouping for 64-bit packet and byte counters.";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-64 {
    description
      "Grouping for 64-bit frame counters.";
    leaf frames {
      type uint64;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Grouping for 64-bit Layer 2 frame and byte counters.";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping basic-packets-32 {
    description
      "Grouping for 32-bit Layer 3 packet counters.";
    leaf packets {
      type uint32;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-32 {
    description
      "Grouping for 32-bit Layer 3 packet and byte counters.";
    uses basic-packets-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-32 {
    description
      "Grouping for 32-bit Layer 2 frame counters.";
    leaf frames {
      type uint32;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-32 {
    description
      "Grouping for 32-bit Layer 2 frame and byte counters.";
    uses basic-frames-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters.";
    uses basic-frames-bytes-64;
  }

  identity address-family {
    description
      "Defines a type for the address family.";
  }

  identity ipv4 {
    base address-family;
    description
      "Identity for an IPv4 address family.";
  }

  identity ipv6 {
    base address-family;
    description
      "Identity for an IPv6 address family.";
  }

  identity all {
    base address-family;
    description
      "Identity for all address families.";
  }

  grouping ip {
    description
      "Layer 3 traffic counters per address family.";
    list address-family-stat {
      key "address-family";
      description
        "Reports per address family traffic counters.";
      leaf address-family {
        type identityref {
          base address-family;
        }
        description
          "Specifies an address family.";
      }
      uses basic-packets-bytes-64;
      container unicast {
        description
          "Reports unicast traffic counters.";
        uses basic-packets-bytes-64;
      }
      container multicast {
        description
          "Reports multicast traffic counters.";
        uses basic-packets-bytes-64;
      }
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters.";
      uses ip;
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic
       counters.";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters.";
      leaf id {
        type string;
        description
          "QoS class identifier.";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "Overall traffic counters.";
    container l2 {
      description
        "Layer 2 traffic counters.";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters.";
      uses l3-traffic;
    }
    container qos {
      description
        "QoS traffic counters.";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters.";
    container ingress {
      description
        "Control plane ingress counters.";
      container traffic {
        description
          "Control plane ingress packets received.";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane ingress packet discard counters.";
        uses basic-packets-bytes-32;
        container policy {
          description
            "Number of control plane packets discarded
             due to policy.";
          uses basic-packets-32;
        }
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame error discard counters.";
    container rx {
      description
        "Layer 2 ingress frame receive error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of frames discarded due to errors with the received frame.";
      }
      leaf crc-error {
        type uint32;
        description
          "The number of frames discarded due to CRC error.";
      }
      leaf invalid-mac {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           MAC address.";
      }
      leaf invalid-vlan {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           VLAN tag.";
      }
      leaf invalid-frame {
        type uint32;
        description
          "The number of invalid frames discarded due to other reasons.";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error discard counters.";
    container rx {
      description
        "Layer 3 ingress packet receive error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors in the received packet.";
      }
      leaf checksum-error {
        type uint32;
        description
          "The number of received packets discarded due to a checksum
           error.";
      }
      leaf mtu-exceeded {
        type uint32;
        description
          "The number of received packets discarded due to MTU
           exceeded.";
      }
      leaf invalid-packet {
        type uint32;
        description
          "The number of invalid packets discarded due to other reasons.";
      }
      leaf ttl-expired {
        type uint32;
        description
          "The number of received packets discarded due to expired
           TTL.";
      }
    }
    leaf no-route {
      type uint32;
      description
        "The number of packets discarded due to no route.";
    }
    leaf invalid-sid {
      type uint32;
      description
        "The number of packets discarded due to an invalid Segment Routing (SR) SID.";
    }
    leaf invalid-label {
      type uint32;
      description
        "The number of packets discarded due to an invalid MPLS label.";
    }
  }

  grouping errors-l3-hw {
    description
      "Hardware error discard counters.";
    leaf packets {
      type uint32;
      description
        "The number of packets discarded due to hardware errors.";
    }
    leaf parity-error {
      type uint32;
      description
        "The number of packets discarded due to parity errors.";
    }
  }

  grouping errors-rx {
    description
      "Ingress error discard counters.";
    container l2 {
      description
        "Layer 2 received frame error discard counters.";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error discard counters.";
      uses errors-l3-rx;
    }
    container hardware {
      description
        "Hardware error discard counters.";
      uses errors-l3-hw;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error discard counters.";
    container tx {
      description
        "Layer 2 transmit frame error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of Layer 2 frames discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error discard counters.";
    container tx {
      description
        "Layer 3 transmit packet error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error discard counters.";
    container l2 {
      description
        "Layer 2 transmit frame error discard counters.";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error discard counters.";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard
       counters.";
    leaf frames {
      type uint32;
      description
        "The number of Layer 2 frames discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of frames discarded due to
         Layer 2 ACL.";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard
       counters.";
    leaf packets {
      type uint32;
      description
        "The number of Layer 3 packets discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to
         Layer 3 ACL.";
    }
    container policer {
      description
        "Ingress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
    leaf null-route {
      type uint32;
      description
        "The number of packets discarded due to matching a
         null route.";
    }
    leaf rpf {
      type uint32;
      description
        "The number of packets discarded due to failing Reverse
         Path Forwarding (RPF) check failure.";
    }
    leaf ddos {
      type uint32;
      description
        "The number of packets discarded due to DDoS
         protection.";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet
       discard counters.";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters.";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters.";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters.";
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to Layer 3
         egress ACL.";
    }
    container policer {
      description
        "Egress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
  }

  grouping policy-tx {
    description
      "Policy egress packet discard counters.";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters.";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level packet traffic and discard counters.";
    container ingress {
      description
        "Ingress counters.";
      container traffic {
        description
          "Ingress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Ingress discard counters.";
        container l2 {
          description
            "Ingress Layer 2 frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Ingress Layer 3 packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress packet error discard counters.";
          uses errors-rx;
        }
        container policy {
          description
            "Policy-related ingress packet discard counters.";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters.";
      container traffic {
        description
          "Egress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Egress packet and frame discard counters.";
        container l2 {
          description
            "Layer 2 egress frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error discard counters.";
          uses errors-tx;
        }
        container policy {
          description
            "Policy-related egress packet discard counters.";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters.";
      uses control-plane;
    }
  }

  /*
   * Main structure definition
   */

  sx:structure packet-discard-reporting {
    description
      "Specifies the abstract structure of packet discard reporting data.";
    list interface {
      key "name";
      description
        "Indicates a list of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Indicates the name of the interface.";
      }
      uses interface;
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG module using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this document has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8791'>
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. BjÃ¶rklund' initials='M.' surname='BjÃ¶rklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8791'/>
  <seriesInfo name='DOI' value='10.17487/RFC8791'/>
</reference>

<reference anchor='RFC2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC6020'>
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='October' year='2010'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6020'/>
  <seriesInfo name='DOI' value='10.17487/RFC6020'/>
</reference>

<reference anchor='RFC3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor='RFC2475'>
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname='S. Blake' initials='S.' surname='Blake'/>
    <author fullname='D. Black' initials='D.' surname='Black'/>
    <author fullname='M. Carlson' initials='M.' surname='Carlson'/>
    <author fullname='E. Davies' initials='E.' surname='Davies'/>
    <author fullname='Z. Wang' initials='Z.' surname='Wang'/>
    <author fullname='W. Weiss' initials='W.' surname='Weiss'/>
    <date month='December' year='1998'/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2475'/>
  <seriesInfo name='DOI' value='10.17487/RFC2475'/>
</reference>

<reference anchor='RFC8289'>
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname='K. Nichols' initials='K.' surname='Nichols'/>
    <author fullname='V. Jacobson' initials='V.' surname='Jacobson'/>
    <author fullname='A. McGregor' initials='A.' role='editor' surname='McGregor'/>
    <author fullname='J. Iyengar' initials='J.' role='editor' surname='Iyengar'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8289'/>
  <seriesInfo name='DOI' value='10.17487/RFC8289'/>
</reference>

<reference anchor='RFC1213'>
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname='K. McCloghrie' initials='K.' surname='McCloghrie'/>
    <author fullname='M. Rose' initials='M.' surname='Rose'/>
    <date month='March' year='1991'/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='17'/>
  <seriesInfo name='RFC' value='1213'/>
  <seriesInfo name='DOI' value='10.17487/RFC1213'/>
</reference>

<reference anchor='RFC7270'>
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname='A. Yourtchenko' initials='A.' surname='Yourtchenko'/>
    <author fullname='P. Aitken' initials='P.' surname='Aitken'/>
    <author fullname='B. Claise' initials='B.' surname='Claise'/>
    <date month='June' year='2014'/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7270'/>
  <seriesInfo name='DOI' value='10.17487/RFC7270'/>
</reference>

<reference anchor='RFC3444'>
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname='A. Pras' initials='A.' surname='Pras'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <date month='January' year='2003'/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3444'/>
  <seriesInfo name='DOI' value='10.17487/RFC3444'/>
</reference>

<reference anchor='RFC8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>

<reference anchor='RFC1157'>
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname='J.D. Case' initials='J.D.' surname='Case'/>
    <author fullname='M. Fedor' initials='M.' surname='Fedor'/>
    <author fullname='M.L. Schoffstall' initials='M.L.' surname='Schoffstall'/>
    <author fullname='J. Davin' initials='J.' surname='Davin'/>
    <date month='May' year='1990'/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1157'/>
  <seriesInfo name='DOI' value='10.17487/RFC1157'/>
</reference>

<reference anchor='RFC8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC7011'>
  <front>
    <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
    <author fullname='B. Claise' initials='B.' role='editor' surname='Claise'/>
    <author fullname='B. Trammell' initials='B.' role='editor' surname='Trammell'/>
    <author fullname='P. Aitken' initials='P.' surname='Aitken'/>
    <date month='September' year='2013'/>
    <abstract>
      <t>This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network. In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required. This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process. This document obsoletes RFC 5101.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='77'/>
  <seriesInfo name='RFC' value='7011'/>
  <seriesInfo name='DOI' value='10.17487/RFC7011'/>
</reference>


<reference anchor='I-D.ietf-netmod-rfc8407bis'>
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author fullname='Andy Bierman' initials='A.' surname='Bierman'>
         <organization>YumaWorks</organization>
      </author>
      <author fullname='Mohamed Boucadair' initials='M.' surname='Boucadair'>
         <organization>Orange</organization>
      </author>
      <author fullname='Qin Wu' initials='Q.' surname='Wu'>
         <organization>Huawei</organization>
      </author>
      <date day='27' month='September' year='2024'/>
      <abstract>
	 <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netmod-rfc8407bis-17'/>
   
</reference>




    </references>


<section anchor="wheredropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single-ASIC, shared-buffered type device. Packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     |>  Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null-route

Unintended                 error/rx/l2   error/l3/rx   no-buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no-route
                                         error/l3/rx/ttl-expired

]]></artwork></figure>

<section anchor="discard-class-descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received L2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl-expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no-route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no-buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="implementation-experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps limit the quantity of data produced per interface, thus constraining the data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are many possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null-route/packets and interface/ingress/discards/errors/no-route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, additional context is needed to determine if ACL discards are intended or due to a misconfigured ACL, i.e., with configuration validation before deployment or by detecting a significant change in ACL discards after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 32-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunnelled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
qWUzegKxAAA=

-->

</rfc>

